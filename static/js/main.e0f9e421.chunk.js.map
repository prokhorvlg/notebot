{"version":3,"sources":["utils/Utils.js","components/CategoryAll.js","components/Category.js","components/CategoriesList.js","components/CategoryColorPicker.js","components/CategoryEditControls.js","components/Note.js","components/NotesList.js","components/NoteEditor.js","data/CategoriesInitialData.js","data/NotesInitialData.js","functionality/CategoriesFunctionality.js","functionality/NotesFunctionality.js","utils/firebase.js","functionality/StorageFunctionality.js","Main.js","reportWebVitals.js","index.js"],"names":["generateId","arrayOfObjects","length","parseInt","id","findObjectInArray","find","object","findPositionInArray","map","indexOf","CategoryAll","selectedClassAll","selectCategory","selectedCategory","href","className","onClick","e","preventDefault","Category","category","changeCategory","deleteCategory","categorySetMode","setCategorySetMode","changeNote","selectedNote","categoryRef","useRef","useEffect","editMode","current","focus","ref","placeholder","onInput","name","target","value","handleEdit","onKeyDown","key","blur","handleKeyDown","onBlur","handleExit","style","color","borderColor","backgroundColor","CategoriesList","categories","i","CategoryColorPicker","editColorMode","setEditColorMode","selectedCategoryColor","setSelectedCategoryColor","useColor","setColor","hex","onOutsideClick","width","height","onChange","hideHSV","hideRGB","hideHEX","dark","CategoryEditControls","icon","faEdit","fixedWidth","console","log","faFill","faTrashAlt","Note","note","deleteNote","selectNote","noteRef","modified","Date","toLocaleString","contents","title","visible","date","formatter","unit","suffix","plural","NotesList","notes","concat","sort","a","b","NoteEditor","apiKey","init","menubar","plugins","toolbar","forced_root_block_attrs","onEditorChange","newValue","editor","CategoriesInitialData","NotesInitialData","useCategories","deleteCategoryNotes","saveCollectionToCloud","deleteItemFromCloud","useState","setSelectedCategory","setCategories","React","createEmptyCategory","emptyCategory","colors","Math","floor","random","generateColor","newProperties","originalCategory","newCategory","Object","assign","newCategories","categoryPosition","splice","useNotes","setSelectedNote","setNotes","createEmptyNote","newId","emptyNote","selected","originalNote","newNote","newNotes","notePosition","firebase","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStorage","userId","setUserId","initUser","myUserId","getQueryStringUser","userExists","saveUser","then","newUserId","saveQueryStringUser","encodeURIComponent","kvp","window","location","search","substr","split","path","protocol","host","pathname","history","pushState","x","join","refresh","insertParamIntoURL","URLSearchParams","get","firestore","collection","doc","toString","exists","add","collectionName","changeCollection","userSession","forEach","item","set","merge","itemId","delete","setCollection","newCollection","items","docs","data","Main","getCollectionFromCloud","categoryId","addCategory","addNote","userIsExisting","loadApp","searchString","setSearchString","noteIsInSelectedCategory","noteContainsSearchString","toLowerCase","includes","faPlusSquare","handleSearchInput","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0f9e421.chunk.js","sourcesContent":["// ** UTILS\r\n// Generates a new id number based on the last value found in the array plus one.\r\nexport const generateId = (arrayOfObjects) => {\r\n  if (arrayOfObjects.length > 0) {\r\n    return parseInt(arrayOfObjects[arrayOfObjects.length - 1].id) + 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n// Generates a random hex code from a list.\r\nexport const generateColor = () => {\r\n  const colors = [\"#91aaff\", \"#ff9e9e\", \"#ff80c5\", \"#7afbff\", \"#8aff9c\"];\r\n  return colors[Math.floor(Math.random()*colors.length)];\r\n}\r\n// Finds the object with the given id within the array.\r\nexport const findObjectInArray = (id, arrayOfObjects) => {\r\n  return arrayOfObjects.find(object => object.id === id);\r\n}\r\n// Finds the position of the object with the given id within the array.\r\nexport const findPositionInArray = (id, arrayOfObjects) => {\r\n  return arrayOfObjects.map(function(object) {return object.id; }).indexOf(id);\r\n}\r\nexport const insertParamIntoURL = (key: string, value: string) => {\r\n    key = encodeURIComponent(key);\r\n    value = encodeURIComponent(value);\r\n\r\n    let kvp = window.location.search.substr(1).split('&');\r\n    if (kvp[0] === '') {\r\n        const path = window.location.protocol + \"//\" + window.location.host + window.location.pathname + '?' + key + '=' + value;\r\n        window.history.pushState({ path: path }, '', path);\r\n\r\n    } else {\r\n        let i = kvp.length; let x; while (i--) {\r\n            x = kvp[i].split('=');\r\n\r\n            if (x[0] === key) {\r\n                x[1] = value;\r\n                kvp[i] = x.join('=');\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (i < 0) {\r\n            kvp[kvp.length] = [key, value].join('=');\r\n        }\r\n\r\n        const refresh = window.location.protocol + \"//\" + window.location.host + window.location.pathname + '?' + kvp.join('&');\r\n        window.history.pushState({ path: refresh }, '', refresh);\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n// CategoryAll: contains the button for the \"all\" category, which is not a true category.\r\nconst CategoryAll = ({selectCategory, selectedCategory}) => {\r\n\r\n  // Append a selected class to all if all is selected.\r\n  let selectedClassAll;\r\n  if (selectedCategory === -1) {\r\n    selectedClassAll = \" selected\";\r\n  } else {\r\n    selectedClassAll = \"\";\r\n  }\r\n\r\n  // Handles the click of the \"all\" category which displays all notes.\r\n  const allCategoryClick = (e) => {\r\n    e.preventDefault();\r\n    selectCategory(-1);\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <a\r\n        id=\"category-all\"\r\n        href=\"#\"\r\n        className={\"category-all \" + selectedClassAll}\r\n        onClick={allCategoryClick}>\r\n          All Notes\r\n      </a>\r\n    </li>\r\n  );\r\n\r\n};\r\n\r\nexport default CategoryAll;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nconst Category = ({ category, changeCategory, deleteCategory, selectCategory, selectedCategory, categorySetMode, setCategorySetMode, changeNote, selectedNote }) => {\r\n\r\n  // Make sure that the input element is focused when the category is in edit mode.\r\n  const categoryRef = useRef(null);\r\n  useEffect(() => {\r\n    if (category.editMode) {\r\n      categoryRef.current.focus();\r\n    }\r\n  }, [category.editMode]);\r\n\r\n  // Handle any events that occur in edit mode.\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.target.blur();\r\n    }\r\n  }\r\n  const handleExit = (e) => {\r\n    // If the input is empty, delete the Category.\r\n    if (e.target.value === \"\") {\r\n      deleteCategory(category.id);\r\n    } else {\r\n      // If input is not empty, update the Category state.\r\n      changeCategory(category.id, { name: e.target.value, editMode: false });\r\n      // Select the newly edited category.\r\n      selectCategory(category.id);\r\n    }\r\n  }\r\n  const handleEdit = (e) => {\r\n    changeCategory(category.id, { name: e.target.value });\r\n  }\r\n\r\n  // Handle any events that occur in normal mode (as an anchor).\r\n  const handleClick = (e) => {\r\n    if (!categorySetMode) {\r\n      // Normal category select mode, just select the targetted category.\r\n      selectCategory(category.id);\r\n    } else {\r\n      // If we are in set mode for a note,\r\n      // Change the selected note's category to this one.\r\n      changeNote(selectedNote, { category: category.id });\r\n      // Reset category set mode.\r\n      setCategorySetMode(false);\r\n      selectCategory(category.id);\r\n    }\r\n  }\r\n\r\n  if (category.editMode) {\r\n    return (\r\n      <li className={\"category-item edit-mode\" + ((selectedCategory === category.id) ? 'selected' : '')}>\r\n        <input\r\n          id={\"category-\" + category.id}\r\n          ref={categoryRef}\r\n          placeholder=\"Enter a category title.\"\r\n          className=\"feature-input\"\r\n          onInput={(e) => handleEdit(e)}\r\n          onKeyDown={(e) => handleKeyDown(e)}\r\n          onBlur={(e) => handleExit(e)}\r\n          value={category.name}\r\n          />\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li className={\"category-item link-mode \" + ((categorySetMode === true) ? 'category-set-mode' : '')}>\r\n        <a\r\n          id={\"category-\" + category.id}\r\n          ref={categoryRef}\r\n          className={(selectedCategory === category.id) ? 'selected' : ''}\r\n          style={{ color: category.color, borderColor: category.color, backgroundColor: category.color }}\r\n          href=\"#\"\r\n          onClick={(e) => handleClick(e)}>\r\n            {category.name}\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default Category;\r\n","import React from 'react';\r\n\r\n// Components\r\nimport Category from './Category';\r\n\r\nconst CategoriesList = ({ categories, changeCategory, deleteCategory, selectCategory, selectedCategory, changeNote, selectedNote, categorySetMode, setCategorySetMode }) => {\r\n\r\n  if (categories) {\r\n    return (\r\n      categories.map((category, i) => (\r\n        <Category\r\n          category={category}\r\n          changeCategory={changeCategory}\r\n          deleteCategory = {deleteCategory}\r\n          selectCategory = {selectCategory}\r\n          selectedCategory = {selectedCategory}\r\n          categorySetMode={categorySetMode}\r\n          setCategorySetMode={setCategorySetMode}\r\n          changeNote={changeNote}\r\n          selectedNote={selectedNote}\r\n        />))\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n};\r\n\r\nexport default CategoriesList;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { ColorPicker, useColor } from \"react-color-palette\";\r\nimport \"react-color-palette/lib/css/styles.css\";\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\n\r\nconst CategoryColorPicker = ({editColorMode, setEditColorMode, selectedCategory, selectedCategoryColor, setSelectedCategoryColor, changeCategory}) => {\r\n\r\n  // Handle color changes for the Category.\r\n  // On app load, set the color to match the app state.\r\n  const [color, setColor] = useColor(\"hex\", selectedCategoryColor);\r\n\r\n  // On color picker update, set app state to reflect color.\r\n  useEffect(() => {\r\n    if (selectedCategory !== -1) {\r\n      changeCategory(selectedCategory, { color: color.hex });\r\n      //setSelectedCategoryColor(color.hex);\r\n    }\r\n  }, [color]);\r\n\r\n  // Handle the user clicking outside of the color picker, effectively ending the selection.\r\n  const handleOutsideColorClick = (e) => {\r\n    setEditColorMode(false);\r\n  }\r\n\r\n  return (\r\n    <OutsideClickHandler\r\n      onOutsideClick={handleOutsideColorClick}>\r\n        <div className={\"category-colorPicker \" + ((editColorMode === true) ? 'showing' : 'not-showing')}>\r\n          <ColorPicker width={250} height={100} color={color} onChange={setColor} hideHSV hideRGB hideHEX dark />\r\n        </div>\r\n    </OutsideClickHandler>\r\n  );\r\n};\r\n\r\nexport default CategoryColorPicker;\r\n","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faFill, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// CategoryEditControls: contains a list of controls for editing the currently selected category.\r\nconst CategoryEditControls = ({selectedCategory, selectedCategoryColor, changeCategory, deleteCategory, editColorMode, setEditColorMode}) => {\r\n\r\n  // Handles click of edit category title click.\r\n  const editCategoryTitleClick = (e) => {\r\n    e.preventDefault();\r\n    // Set the target category into edit mode, unless it is the all category.\r\n    if (selectedCategory !== -1) {\r\n      changeCategory(selectedCategory, { editMode: true });\r\n    }\r\n  }\r\n\r\n  // Handles click of edit color category.\r\n  const editCategoryColorClick = (e) => {\r\n    e.preventDefault();\r\n    // Set the target category into edit mode, unless it is the all category.\r\n    if (selectedCategory !== -1) {\r\n      changeCategory(selectedCategory, { editMode: false });\r\n      if (editColorMode === true) {\r\n        console.log(\"Set\")\r\n        setEditColorMode(false);\r\n      } else {\r\n        setEditColorMode(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handles click of delete category.\r\n  const deleteCategoryClick = (e) => {\r\n    e.preventDefault();\r\n    // Delete the currently selected category, unless it is the all category.\r\n    if (selectedCategory !== -1) {\r\n      deleteCategory(selectedCategory);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ borderColor: selectedCategoryColor }} className={\"main-categories-controls \" + ((selectedCategory !== -1) ? 'showing' : 'not-showing')}>\r\n      <a href=\"#\" onClick={editCategoryTitleClick}>\r\n        <FontAwesomeIcon icon={faEdit} color={selectedCategoryColor} className=\"fa-link-icon\" fixedWidth  />\r\n        Edit title\r\n      </a>\r\n      <a href=\"#\" onClick={editCategoryColorClick}>\r\n        <FontAwesomeIcon icon={faFill} color={selectedCategoryColor} className=\"fa-link-icon\" fixedWidth  />\r\n        Edit color\r\n      </a>\r\n      <a href=\"#\" onClick={deleteCategoryClick}>\r\n        <FontAwesomeIcon icon={faTrashAlt} color={selectedCategoryColor} className=\"fa-link-icon\" fixedWidth  />\r\n        Delete category\r\n      </a>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default CategoryEditControls;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport TimeAgo from 'react-timeago'\r\nimport { findObjectInArray } from \"../utils/Utils\";\r\n\r\nconst Note = ({ note, changeNote, deleteNote, selectNote, selectedNote, categories }) => {\r\n\r\n  // Make sure that the input element is focused when the note is in edit mode.\r\n  const noteRef = useRef(null);\r\n  useEffect(() => {\r\n    if (note.editMode) {\r\n      noteRef.current.focus();\r\n    }\r\n  }, [note.editMode]);\r\n\r\n  // Update the \"last modified\" time to now any time the contents of the notes change.\r\n  useEffect(() => {\r\n    if (selectedNote && selectedNote === note.id) {\r\n      changeNote(note.id, { modified: new Date().toLocaleString() });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [note.contents, note.title]);\r\n\r\n  // Handle any events that occur in edit mode.\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.target.blur();\r\n    }\r\n  }\r\n  const handleExit = (e) => {\r\n    // If the input is empty, delete the Category.\r\n    if (e.target.value === \"\") {\r\n      deleteNote(note.id);\r\n    } else {\r\n      // If input is not empty, update the Category state.\r\n      changeNote(note.id, { title: e.target.value, editMode: false });\r\n      // Select the newly edited category.\r\n      selectNote(note.id);\r\n    }\r\n  }\r\n  const handleEdit = (e) => {\r\n    changeNote(note.id, { title: e.target.value });\r\n  }\r\n\r\n  // Handle any events that occur in normal mode (as an anchor).\r\n  const handleClick = (e) => {\r\n    selectNote(note.id);\r\n  }\r\n\r\n  if (note.editMode) {\r\n    return (\r\n      <li className={\"category-item edit-mode \" + ((selectedNote === note.id) ? 'selected' : '')}>\r\n        <input\r\n          id={\"note-\" + note.id}\r\n          ref={noteRef}\r\n          placeholder=\"Enter a note title.\"\r\n          className=\"feature-input\"\r\n          onInput={(e) => handleEdit(e)}\r\n          onKeyDown={(e) => handleKeyDown(e)}\r\n          onBlur={(e) => handleExit(e)}\r\n          value={note.title}\r\n          />\r\n      </li>\r\n    );\r\n  } else if (note.visible) {\r\n    return (\r\n      <li className={\"note-title link-mode \" + ((selectedNote === note.id) ? 'selected' : '')}>\r\n        <a href=\"#\" onClick={(e) => handleClick(e)}>\r\n          <div className=\"note-title-color\" style={{ backgroundColor: findObjectInArray(note.category, categories).color }}></div>\r\n          <div className=\"note-title-box\">\r\n            <h2>{note.title}</h2>\r\n            <p>\r\n              <TimeAgo\r\n                  date={note.modified}\r\n                  formatter={(value: number, unit: TimeAgo.Unit, suffix: TimeAgo.Suffix) => {\r\n                    if (unit === 'second') return 'just now';\r\n                    const plural: string = value !== 1 ? 's' : '';\r\n                    return `${value} ${unit}${plural} ${suffix}`;\r\n                  }}\r\n                />\r\n            </p>\r\n          </div>\r\n        </a>\r\n      </li>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\n// Components\r\nimport Note from './Note';\r\n\r\nconst NotesList = ({ notes, changeNote, deleteNote, selectNote, selectedNote, categories }) => {\r\n\r\n  return (\r\n    [].concat(notes)\r\n      .sort((a, b) => { return new Date(b.modified) - new Date(a.modified) })\r\n      .map((note, i) =>\r\n        <Note\r\n          note={note}\r\n          changeNote={changeNote}\r\n          deleteNote={deleteNote}\r\n          selectNote={selectNote}\r\n          selectedNote={selectedNote}\r\n          categories={categories}\r\n        />)\r\n  );\r\n\r\n};\r\n\r\nexport default NotesList;\r\n","import React from 'react';\r\nimport { findObjectInArray } from \"../utils/Utils\";\r\n// - Tiny MCE for WISYWIG\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nconst NoteEditor = ({ selectedNote, notes, changeNote }) => {\r\n\r\n  if (selectedNote !== null) {\r\n    return (\r\n      <Editor\r\n        value={findObjectInArray(selectedNote, notes).contents}\r\n        apiKey=\"nacx0iqah4xpy7tb8prkc3hy42bdva4exnbaurkyumhwg0f2\"\r\n        init={{\r\n          menubar: false,\r\n          plugins: [\r\n            'advlist autolink lists link image',\r\n            'charmap print preview anchor help',\r\n            'searchreplace visualblocks code',\r\n            'insertdatetime media table paste wordcount'\r\n          ],\r\n          toolbar:\r\n            'undo redo | formatselect | bold italic | \\\r\n            alignleft aligncenter alignright | \\\r\n            bullist numlist outdent indent | help',\r\n          forced_root_block_attrs: {\r\n            'class': 'editor-font',\r\n            'style': 'font-family: Inter;'\r\n          }\r\n        }}\r\n\r\n        onEditorChange={(newValue, editor) => {\r\n          changeNote(selectedNote, { contents: newValue });\r\n          console.log(newValue);\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n};\r\n\r\nexport default NoteEditor;\r\n","const CategoriesInitialData = [\r\n    {\r\n      id: 0,\r\n      name: 'Personal',\r\n      color: '#00ff84',\r\n      editMode: false\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'Work',\r\n      color: '#ffb322',\r\n      editMode: false\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Miscellaneous',\r\n      color: '#16ecff',\r\n      editMode: false\r\n    }\r\n  ];\r\n\r\nexport default CategoriesInitialData;\r\n","const NotesInitialData = [\r\n    {\r\n      id: 0,\r\n      title: 'Welcome!',\r\n      category: 0,\r\n      modified: new Date('January 30, 2021 06:15:30').toLocaleString(),\r\n      contents: `<h2 class=\"editor-font\" style=\"font-family: Inter;\">Hey there, visitor!</h2>\r\n<p class=\"editor-font\" style=\"font-family: Inter;\">This is a demo for a simple React note-taking application.</p>\r\n<p class=\"editor-font\" style=\"font-family: Inter;\">The demo is not intended for serious use. <strong>Your changes will not persist.</strong></p>\r\n<p class=\"editor-font\" style=\"font-family: Inter;\">Created with love by <span style=\"text-decoration: underline;\">@prokhorvlg (Valentin Sigalov)</span>!</p>`,\r\n      editMode: false,\r\n      visible: false\r\n    },\r\n    {\r\n      id: 1,\r\n      title: 'Area 51 vacation plans',\r\n      category: 0,\r\n      modified: new Date('June 26, 2021 12:15:30').toLocaleString(),\r\n      contents: '<p class=\"editor-font\" style=\"font-family: Inter;\">Contents of a note.</p>',\r\n      editMode: false,\r\n      visible: false\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Funniest joke ever',\r\n      category: 0,\r\n      modified: new Date('June 29, 2021 23:15:30').toLocaleString(),\r\n      contents: '<p class=\"editor-font\" style=\"font-family: Inter;\">Contents of a note.</p>',\r\n      editMode: false,\r\n      visible: false\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Lol tech specs',\r\n      category: 1,\r\n      modified: new Date('July 3, 2021 09:15:30').toLocaleString(),\r\n      contents: '<p class=\"editor-font\" style=\"font-family: Inter;\">Contents of a note.</p>',\r\n      editMode: false,\r\n      visible: false\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Cats on the moon',\r\n      category: 2,\r\n      modified: new Date('July 4, 2021 05:15:30').toLocaleString(),\r\n      contents: '<p class=\"editor-font\" style=\"font-family: Inter;\">Contents of a note.</p>',\r\n      editMode: false,\r\n      visible: false\r\n    },\r\n  ];\r\n\r\nexport default NotesInitialData;\r\n","import React, { useState } from 'react';\r\n\r\n// Utilities\r\nimport { generateId, generateColor, findObjectInArray, findPositionInArray } from \"../utils/Utils\";\r\n\r\n// ** CATEGORIES\r\nconst useCategories = (deleteCategoryNotes, saveCollectionToCloud, deleteItemFromCloud) => {\r\n  // Stores the currently selected category that is highlighted and who's notes are being displayed.\r\n  const [selectedCategory, setSelectedCategory] = useState(-1);\r\n\r\n  // Stores the categories associated with the user.\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  // Set the theme color of the category editor box and its contents.\r\n  const [selectedCategoryColor, setSelectedCategoryColor] = useState(\"#ffffff\");\r\n  React.useEffect(() => {\r\n    if (selectedCategory !== -1) {\r\n      setSelectedCategoryColor(findObjectInArray(selectedCategory, categories).color);\r\n    }\r\n  }, [selectedCategory, categories]);\r\n\r\n  // Trigger the process to add a new category.\r\n  const addCategory = () => {\r\n    createEmptyCategory();\r\n  }\r\n\r\n  // Create a new empty category (a bucket for notes).\r\n  const createEmptyCategory = () => {\r\n    const newId = generateId(categories);\r\n    const newColor = generateColor();\r\n    const emptyCategory = {\r\n      id: newId,\r\n      name: '',\r\n      color: newColor, // replace with random bright color\r\n      editMode: true\r\n    };\r\n    setCategories(categories  => [...categories, emptyCategory]);\r\n  }\r\n\r\n  // Change category to the details provided in the input object.\r\n  // Expect input object to look like { key: newValue, ... }\r\n  const changeCategory = (id, newProperties) => {\r\n    // Find the object with the relevant id.\r\n    const originalCategory = findObjectInArray(id, categories);\r\n    // Replace any values within it with the submitted properties.\r\n    const newCategory = Object.assign(originalCategory, newProperties);\r\n\r\n    // Construct a new array to replace the state.\r\n    const newCategories = [...categories];\r\n    const categoryPosition = findPositionInArray(id, categories);\r\n    newCategories[categoryPosition] = newCategory;\r\n    setCategories(newCategories);\r\n  }\r\n\r\n  // Causes the category with the given id to be set to selected within the state.\r\n  const selectCategory = (id) => {\r\n    // Set the id of the selected category.\r\n    setSelectedCategory(id);\r\n  }\r\n\r\n  // Deletes a category based on id.\r\n  const deleteCategory = (id) => {\r\n    // There must be at least 1 category to create notes into.\r\n    if (categories.length !== 1) {\r\n      // Create new categories array with the object removed.\r\n      let newCategories = [...categories];\r\n      const categoryPosition = findPositionInArray(id, categories);\r\n      newCategories.splice(categoryPosition, 1);\r\n      setCategories(newCategories);\r\n\r\n      // Reset selected category to \"all\".\r\n      setSelectedCategory(-1);\r\n\r\n      // Delete the category from the cloud.\r\n      deleteItemFromCloud(id, \"categories\");\r\n\r\n      // Delete all notes that were associated with this category.\r\n      deleteCategoryNotes(id);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (categories.length) {\r\n      saveCollectionToCloud(categories, \"categories\", changeCategory);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [categories]);\r\n\r\n  return [\r\n      selectedCategory,\r\n      categories,\r\n      setCategories,\r\n      selectedCategoryColor,\r\n      setSelectedCategoryColor,\r\n      addCategory,\r\n      changeCategory,\r\n      selectCategory,\r\n      deleteCategory\r\n    ];\r\n}\r\n\r\nexport default useCategories;\r\n","import React, { useState } from 'react';\r\n\r\n// Utilities\r\nimport { generateId, findObjectInArray, findPositionInArray } from \"../utils/Utils\";\r\n\r\n// ** NOTES\r\nconst useNotes = (categories, selectedCategory, saveCollectionToCloud, deleteItemFromCloud) => {\r\n  // Stores the currently selected note that is being edited in the main panel.\r\n  const [selectedNote, setSelectedNote] = useState(null);\r\n\r\n  // Stores the notes associated with the user.\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  // Trigger the process to add a new note.\r\n  const addNote = () => {\r\n    createEmptyNote();\r\n  }\r\n\r\n  // Create a new empty category (a bucket for notes).\r\n  const createEmptyNote = () => {\r\n    const newId = generateId(notes);\r\n    const assignedCategory = (selectedCategory !== -1 ? selectedCategory : categories[0].id);\r\n    const emptyNote = {\r\n      id: newId,\r\n      title: '',\r\n      category: assignedCategory,\r\n      modified: new Date().toLocaleString(),\r\n      contents: '',\r\n      selected: false,\r\n      editMode: true,\r\n      visible: true\r\n    }\r\n    setNotes(notes  => [...notes, emptyNote]);\r\n    return newId;\r\n  }\r\n\r\n  // Change note to the details provided in the input object.\r\n  // Expect input object to look like { key: newValue, ... }\r\n  const changeNote = (id, newProperties) => {\r\n    // Find the object with the relevant id.\r\n    const originalNote = findObjectInArray(id, notes);\r\n    // Replace any values within it with the submitted properties.\r\n    const newNote = Object.assign(originalNote, newProperties);\r\n\r\n    // Construct a new array to replace the state.\r\n    const newNotes = [...notes];\r\n    const notePosition = findPositionInArray(id, notes);\r\n    newNotes[notePosition] = newNote;\r\n    setNotes(newNotes);\r\n  }\r\n\r\n  // Causes the note with the given id to be set to selected within the state.\r\n  const selectNote = (id) => {\r\n    setSelectedNote(id);\r\n  }\r\n\r\n  // Deletes a note based on id.\r\n  const deleteNote = (id) => {\r\n    // Create new notes array with the object removed.\r\n    let newNotes = [...notes];\r\n    const notePosition = findPositionInArray(id, notes);\r\n    newNotes.splice(notePosition, 1);\r\n    setNotes(newNotes);\r\n\r\n    // Reset selected note to \"all\".\r\n    setSelectedNote(null);\r\n\r\n    // Delete the category from the cloud.\r\n    deleteItemFromCloud(id, \"notes\");\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    saveCollectionToCloud(notes, \"notes\", changeNote);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [notes]);\r\n\r\n  return [\r\n      selectedNote,\r\n      notes,\r\n      setNotes,\r\n      addNote,\r\n      changeNote,\r\n      selectNote,\r\n      deleteNote\r\n    ];\r\n}\r\n\r\nexport default useNotes;\r\n","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDdCjbP7lQVb7--7uraYnkEdLGjWTmWckE\",\r\n  authDomain: \"notebot-42.firebaseapp.com\",\r\n  databaseURL: \"https://notebot-42.firebaseio.com\",\r\n  projectId: \"notebot-42\",\r\n  storageBucket: \"notebot-42.appspot.com\",\r\n  messagingSenderId: \"884273569921\",\r\n  appId: \"1:884273569921:web:e56bf1258d353e4ae02d80\",\r\n  measurementId: \"G-7B4K7B82XL\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport default firebase;\r\n","import { useState } from 'react';\r\nimport firebase from \"../utils/firebase\";\r\nimport { insertParamIntoURL } from \"../utils/Utils\";\r\n\r\nconst useStorage = () => {\r\n\r\n  // Stores the id of the user.\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const initUser = async () => {\r\n    // Try to retrieve the user from local, if it exists.\r\n    const myUserId = getQueryStringUser();\r\n    // If user is in query string, check if user exists on cloud.\r\n    if (myUserId && myUserId !== \"\" && userExists) {\r\n      // If user exists on cloud, set it as the userId.\r\n      setUserId(myUserId);\r\n      return [myUserId, true];\r\n    } else {\r\n      // If user does not exist, then make a call to create the user on Firebase.\r\n      return saveUser().then((newUserId) => {\r\n        // Save the new user in the state.\r\n        setUserId(newUserId);\r\n        // Save the user Id locally.\r\n        saveQueryStringUser(newUserId);\r\n        return [newUserId, false];\r\n      });\r\n    }\r\n  }\r\n\r\n  // ** LOCAL STORAGE\r\n  // Store and retrieve the user id from local storage, if the user refreshes the page.\r\n  /*const saveLocalUser = () => {\r\n    const notebotUserStore = userId;\r\n    localStorage.setItem('notebotUserStore', JSON.stringify(notebotUserStore));\r\n  }\r\n  const getLocalUser = () => {\r\n    const notebotUserStore = JSON.parse(localStorage.getItem('notebotUserStore'));\r\n    return notebotUserStore;\r\n  }*/\r\n\r\n  // ** QUERY STRING\r\n  // Store and retrieve the user id from query string, if the user refreshes the page.\r\n  const saveQueryStringUser = (newUserId) => {\r\n    insertParamIntoURL(\"user\", newUserId);\r\n    /*var notebotUserParams = new URLSearchParams(window.location.search);\r\n    notebotUserParams.set(\"user\", newUserId.toString());\r\n    window.history.replaceState(null, null, window.location + \"?\" + notebotUserParams.toString() + window.location.hash);*/\r\n  }\r\n  const getQueryStringUser = () => {\r\n    var notebotUserParams = new URLSearchParams(window.location.search);\r\n    return notebotUserParams.get(\"user\");\r\n  }\r\n\r\n  // * CLOUD FUNCTIONS\r\n\r\n  // ** USER\r\n  const userExists = async (userId) => {\r\n    return firebase.firestore().collection(\"users\").doc(userId.toString()).get().then((doc) => { return doc.exists; });\r\n  }\r\n  const saveUser = async () => {\r\n    return firebase.firestore().collection(\"users\")\r\n      .add({\r\n        categories: [],\r\n        notes: []\r\n      }).then((doc) => {\r\n        return doc.id;\r\n      });\r\n  }\r\n\r\n  // ** CATEGORIES AND NOTES\r\n  const saveCollectionToCloud = (collection, collectionName, changeCollection) => {\r\n    if (userId && collection) {\r\n      const userSession = firebase.firestore().collection(\"users\").doc(userId);\r\n      collection.forEach((item) => {\r\n        userSession.collection(collectionName)\r\n          .doc(item.id.toString())\r\n          .set(item, { merge: true });\r\n      });\r\n    }\r\n  }\r\n  const deleteItemFromCloud = (itemId, collectionName) => {\r\n    if (userId) {\r\n      const userSession = firebase.firestore().collection(\"users\").doc(userId);\r\n      userSession.collection(collectionName).doc(itemId.toString()).delete();\r\n    }\r\n  }\r\n  const getCollectionFromCloud = async (newUserId, collectionName, setCollection) => {\r\n    if (newUserId) {\r\n      let newCollection = [];\r\n      const userSession = firebase.firestore().collection(\"users\").doc(newUserId);\r\n      userSession.collection(collectionName).get().then((items) => {\r\n        items.docs.forEach((item) => {\r\n          newCollection = [...newCollection, item.data()];\r\n        });\r\n      }).then(() => {\r\n        setCollection(newCollection);\r\n      });\r\n    }\r\n  }\r\n\r\n  return [\r\n    userId,\r\n    initUser,\r\n    saveCollectionToCloud,\r\n    deleteItemFromCloud,\r\n    getCollectionFromCloud\r\n  ];\r\n}\r\n\r\nexport default useStorage;\r\n","import React, { useState } from 'react';\n\n// Addons\n// - Font Awesome for icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\n\nimport TimeAgo from 'react-timeago'\n\n// Utilities\nimport { findObjectInArray } from \"./utils/Utils\";\n\n// Components\nimport CategoryAll from './components/CategoryAll';\nimport CategoriesList from './components/CategoriesList';\nimport CategoryColorPicker from './components/CategoryColorPicker';\nimport CategoryEditControls from './components/CategoryEditControls';\nimport NotesList from './components/NotesList';\nimport NoteEditor from './components/NoteEditor';\n\n// Initial Data\nimport CategoriesInitialData from './data/CategoriesInitialData';\nimport NotesInitialData from './data/NotesInitialData';\n\n// Functionality\nimport useCategories from  './functionality/CategoriesFunctionality';\nimport useNotes from  './functionality/NotesFunctionality';\nimport useStorage from \"./functionality/StorageFunctionality\";\n\n// MAIN APPLICATION\nconst Main = () => {\n\n  // * STATE\n\n  // ** STORAGE: Custom hook that handles User and Cloud Storage related functionality.\n  const [\n    userId,\n    initUser,\n    saveCollectionToCloud,\n    deleteItemFromCloud,\n    getCollectionFromCloud\n  ] = useStorage();\n\n  // ** DELETE CATEGORY NOTES: Deletes all notes within a given category.\n  const deleteCategoryNotes = (categoryId) => {\n    notes.forEach((note) => {\n      if (note.category === categoryId) {\n        deleteNote(note.id);\n      }\n    });\n  }\n\n  // ** CATEGORIES: Custom hook for Categories-related functionality.\n  const [\n    selectedCategory,\n    categories,\n    setCategories,\n    selectedCategoryColor,\n    setSelectedCategoryColor,\n    addCategory,\n    changeCategory,\n    selectCategory,\n    deleteCategory\n  ] = useCategories(deleteCategoryNotes, saveCollectionToCloud, deleteItemFromCloud);\n  const [categorySetMode, setCategorySetMode] = useState(false);\n\n  // ** CATEGORY COLOR PICKER\n  const [editColorMode, setEditColorMode] = useState(false);\n\n  // ** NOTES: Custom hook for Notes-related functionality.\n  const [\n    selectedNote,\n    notes,\n    setNotes,\n    addNote,\n    changeNote,\n    selectNote,\n    deleteNote\n  ] = useNotes(categories, selectedCategory, saveCollectionToCloud, deleteItemFromCloud);\n\n  // ** LOAD APP DATA FROM CLOUD\n  React.useEffect(() => {\n    async function loadApp() {\n      console.log(\"totally only running once lol\")\n      initUser() // Load the user data or creates a new one if they do not exist on load.\n        .then(([newUserId, userIsExisting]) => {\n          console.log(userIsExisting)\n          if (userIsExisting) {\n            // Load the user's categories into the state.\n            console.log(\"grabbing collection!\");\n            getCollectionFromCloud(newUserId, \"categories\", setCategories);\n          } else {\n            // Load initial data.\n            setCategories(CategoriesInitialData);\n          }\n          return [newUserId, userIsExisting];\n        })\n        .then(([newUserId, userIsExisting]) => {\n          if (userIsExisting) {\n            // Load the user's notes into the state.\n            getCollectionFromCloud(newUserId, \"notes\", setNotes);\n          } else {\n            // Load initial data.\n            setNotes(NotesInitialData);\n          }\n        })\n    }\n    loadApp();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // ** SEARCH\n  const [searchString, setSearchString] = useState(\"\");\n  const handleSearchInput = (e) => {\n    setSearchString(e.target.value);\n  }\n  React.useEffect(() => {\n    // Filter the selection down.\n    notes.forEach((note) => {\n      // Make sure note is in selected category (or all are visible).\n      const noteIsInSelectedCategory = (note.category === selectedCategory || selectedCategory === -1);\n      const noteContainsSearchString = (note.title.toLowerCase().includes(searchString) || note.contents.toLowerCase().includes(searchString) || searchString === \"\");\n      if (noteIsInSelectedCategory && noteContainsSearchString) {\n        changeNote(note.id, { visible: true });\n      } else {\n        changeNote(note.id, { visible: false });\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userId, searchString, selectedCategory]);\n\n  // ** MOBILE VIEWS\n  const [activeScreen, setActiveScreen] = useState(0);\n\n  // * RENDER\n  return (\n    <div className=\"app-container\">\n      <div className=\"main-column\">\n        <div className=\"main-logo\">\n          <div className=\"box-logo\"></div>\n          <h1>Notebot</h1>\n        </div>\n        <div className=\"main-categories\">\n\n          <ul className=\"main-categories-list\">\n            <CategoryAll\n              selectCategory={selectCategory}\n              selectedCategory={selectedCategory}\n              />\n            <CategoriesList\n              categories={categories}\n              changeCategory={changeCategory}\n              deleteCategory={deleteCategory}\n              selectCategory={selectCategory}\n              selectedCategory={selectedCategory}\n              changeNote={changeNote}\n              selectedNote={selectedNote}\n              categorySetMode={categorySetMode}\n              setCategorySetMode={setCategorySetMode}\n              />\n          </ul>\n\n          <CategoryColorPicker\n            editColorMode={editColorMode}\n            setEditColorMode={setEditColorMode}\n            selectedCategory={selectedCategory}\n            selectedCategoryColor={selectedCategoryColor}\n            setSelectedCategoryColor={setSelectedCategoryColor}\n            changeCategory={changeCategory}\n            />\n\n          <CategoryEditControls\n            selectedCategory={selectedCategory}\n            selectedCategoryColor={selectedCategoryColor}\n            changeCategory={changeCategory}\n            deleteCategory={deleteCategory}\n            editColorMode={editColorMode}\n            setEditColorMode={setEditColorMode}\n            />\n\n          <div className=\"main-categories-add\">\n            <a href=\"#\" onClick={addCategory} className=\"feature-link\">\n              <FontAwesomeIcon icon={faPlusSquare} className=\"fa-link-icon\" />\n              Add category\n            </a>\n          </div>\n\n        </div>\n      </div>\n      <div className=\"list-column\">\n        <div className=\"list-search-box\"><h2>Search your notes</h2>\n          <input\n            className=\"feature-input\"\n            onInput={(e) => handleSearchInput(e)}\n            />\n        </div>\n        <ul>\n          <NotesList\n            notes={notes}\n            changeNote={changeNote}\n            deleteNote={deleteNote}\n            selectNote={selectNote}\n            selectedNote={selectedNote}\n            categories={categories}\n            />\n        </ul>\n        <div className=\"list-notes-add\">\n          <a href=\"#\" onClick={addNote} className=\"feature-link\">\n            <FontAwesomeIcon icon={faPlusSquare} className=\"fa-link-icon\" />\n            Add note\n          </a>\n        </div>\n      </div>\n      <div className=\"note-column\">\n        <div className=\"note-title-bar\">\n          <div className=\"note-title-icon\" style={{ backgroundColor: (selectedNote !== null) ? findObjectInArray(findObjectInArray(selectedNote, notes).category, categories).color : \"white\" }}></div>\n          <div className=\"note-title-container\">\n            <h3>{(selectedNote !== null) ? findObjectInArray(selectedNote, notes).title : \"Select a note\"}</h3>\n            {(selectedNote !== null) ?\n              <p> edited <TimeAgo\n                  date={findObjectInArray(selectedNote, notes).modified}\n                  formatter={(value: number, unit: TimeAgo.Unit, suffix: TimeAgo.Suffix) => {\n                    if (unit === 'second') return 'just now';\n                    const plural: string = value !== 1 ? 's' : '';\n                    return `${value} ${unit}${plural} ${suffix}`;\n                  }}\n                />, on {findObjectInArray(selectedNote, notes).modified.toString()}</p>\n            :\n              <p>No note selected.</p>\n            }\n          </div>\n      </div>\n        <div className=\"note-contents\">\n          <NoteEditor\n            selectedNote={selectedNote}\n            notes={notes}\n            changeNote={changeNote}\n            />\n        </div>\n        <div className=\"note-controls\">\n          <a href=\"#\" className=\"feature-link\" onClick={(e) => changeNote(selectedNote, { editMode: true })}>\n            <FontAwesomeIcon icon={faPlusSquare} className=\"fa-link-icon\" />\n            Change title\n          </a>\n          <a href=\"#\" className=\"feature-link\" onClick={(e) => deleteNote(selectedNote)}>\n            <FontAwesomeIcon icon={faPlusSquare} className=\"fa-link-icon\" />\n            Delete note\n          </a>\n          <a href=\"#\" className=\"feature-link\" onClick={(e) => { if (selectedNote !== null) setCategorySetMode(true) }}>\n            <FontAwesomeIcon icon={faPlusSquare} className=\"fa-link-icon\" />\n            Change category\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.scss';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}